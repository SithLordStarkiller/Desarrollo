//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Suncorp.ServiceController.DireccionesWcf {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DireccionesWcf.IDireccionesWcf")]
    public interface IDireccionesWcf {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirCatEstado", ReplyAction="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirCatEstadoResponse")]
        System.Collections.Generic.List<Suncorp.Models.DirCatEstados> ObtenerTablaDirCatEstado();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirCatEstado", ReplyAction="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirCatEstadoResponse")]
        System.IAsyncResult BeginObtenerTablaDirCatEstado(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Suncorp.Models.DirCatEstados> EndObtenerTablaDirCatEstado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/InsertarDirCatEstado", ReplyAction="http://tempuri.org/IDireccionesWcf/InsertarDirCatEstadoResponse")]
        Suncorp.Models.DirCatEstados InsertarDirCatEstado(Suncorp.Models.DirCatEstados model);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/InsertarDirCatEstado", ReplyAction="http://tempuri.org/IDireccionesWcf/InsertarDirCatEstadoResponse")]
        System.IAsyncResult BeginInsertarDirCatEstado(Suncorp.Models.DirCatEstados model, System.AsyncCallback callback, object asyncState);
        
        Suncorp.Models.DirCatEstados EndInsertarDirCatEstado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/ActualizarDirCatEstado", ReplyAction="http://tempuri.org/IDireccionesWcf/ActualizarDirCatEstadoResponse")]
        bool ActualizarDirCatEstado(Suncorp.Models.DirCatEstados model);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/ActualizarDirCatEstado", ReplyAction="http://tempuri.org/IDireccionesWcf/ActualizarDirCatEstadoResponse")]
        System.IAsyncResult BeginActualizarDirCatEstado(Suncorp.Models.DirCatEstados model, System.AsyncCallback callback, object asyncState);
        
        bool EndActualizarDirCatEstado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/EliminarDirCatEstado", ReplyAction="http://tempuri.org/IDireccionesWcf/EliminarDirCatEstadoResponse")]
        bool EliminarDirCatEstado(Suncorp.Models.DirCatEstados model);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/EliminarDirCatEstado", ReplyAction="http://tempuri.org/IDireccionesWcf/EliminarDirCatEstadoResponse")]
        System.IAsyncResult BeginEliminarDirCatEstado(Suncorp.Models.DirCatEstados model, System.AsyncCallback callback, object asyncState);
        
        bool EndEliminarDirCatEstado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirCatMunicipios", ReplyAction="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirCatMunicipiosResponse")]
        System.Collections.Generic.List<Suncorp.Models.DirCatMunicipios> ObtenerTablaDirCatMunicipios();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirCatMunicipios", ReplyAction="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirCatMunicipiosResponse")]
        System.IAsyncResult BeginObtenerTablaDirCatMunicipios(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Suncorp.Models.DirCatMunicipios> EndObtenerTablaDirCatMunicipios(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/InsertarDirCatMunicipios", ReplyAction="http://tempuri.org/IDireccionesWcf/InsertarDirCatMunicipiosResponse")]
        Suncorp.Models.DirCatMunicipios InsertarDirCatMunicipios(Suncorp.Models.DirCatMunicipios model);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/InsertarDirCatMunicipios", ReplyAction="http://tempuri.org/IDireccionesWcf/InsertarDirCatMunicipiosResponse")]
        System.IAsyncResult BeginInsertarDirCatMunicipios(Suncorp.Models.DirCatMunicipios model, System.AsyncCallback callback, object asyncState);
        
        Suncorp.Models.DirCatMunicipios EndInsertarDirCatMunicipios(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/ActualizarDirCatMunicipios", ReplyAction="http://tempuri.org/IDireccionesWcf/ActualizarDirCatMunicipiosResponse")]
        bool ActualizarDirCatMunicipios(Suncorp.Models.DirCatMunicipios model);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/ActualizarDirCatMunicipios", ReplyAction="http://tempuri.org/IDireccionesWcf/ActualizarDirCatMunicipiosResponse")]
        System.IAsyncResult BeginActualizarDirCatMunicipios(Suncorp.Models.DirCatMunicipios model, System.AsyncCallback callback, object asyncState);
        
        bool EndActualizarDirCatMunicipios(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/EliminarDirCatMunicipios", ReplyAction="http://tempuri.org/IDireccionesWcf/EliminarDirCatMunicipiosResponse")]
        bool EliminarDirCatMunicipios(Suncorp.Models.DirCatMunicipios model);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/EliminarDirCatMunicipios", ReplyAction="http://tempuri.org/IDireccionesWcf/EliminarDirCatMunicipiosResponse")]
        System.IAsyncResult BeginEliminarDirCatMunicipios(Suncorp.Models.DirCatMunicipios model, System.AsyncCallback callback, object asyncState);
        
        bool EndEliminarDirCatMunicipios(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirCatColonias", ReplyAction="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirCatColoniasResponse")]
        System.Collections.Generic.List<Suncorp.Models.DirCatColonias> ObtenerTablaDirCatColonias();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirCatColonias", ReplyAction="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirCatColoniasResponse")]
        System.IAsyncResult BeginObtenerTablaDirCatColonias(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Suncorp.Models.DirCatColonias> EndObtenerTablaDirCatColonias(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/InsertarDirCatColonias", ReplyAction="http://tempuri.org/IDireccionesWcf/InsertarDirCatColoniasResponse")]
        Suncorp.Models.DirCatColonias InsertarDirCatColonias(Suncorp.Models.DirCatColonias model);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/InsertarDirCatColonias", ReplyAction="http://tempuri.org/IDireccionesWcf/InsertarDirCatColoniasResponse")]
        System.IAsyncResult BeginInsertarDirCatColonias(Suncorp.Models.DirCatColonias model, System.AsyncCallback callback, object asyncState);
        
        Suncorp.Models.DirCatColonias EndInsertarDirCatColonias(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/ActualizarDirCatColonias", ReplyAction="http://tempuri.org/IDireccionesWcf/ActualizarDirCatColoniasResponse")]
        bool ActualizarDirCatColonias(Suncorp.Models.DirCatColonias model);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/ActualizarDirCatColonias", ReplyAction="http://tempuri.org/IDireccionesWcf/ActualizarDirCatColoniasResponse")]
        System.IAsyncResult BeginActualizarDirCatColonias(Suncorp.Models.DirCatColonias model, System.AsyncCallback callback, object asyncState);
        
        bool EndActualizarDirCatColonias(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/EliminarDirCatColonias", ReplyAction="http://tempuri.org/IDireccionesWcf/EliminarDirCatColoniasResponse")]
        bool EliminarDirCatColonias(Suncorp.Models.DirCatColonias model);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/EliminarDirCatColonias", ReplyAction="http://tempuri.org/IDireccionesWcf/EliminarDirCatColoniasResponse")]
        System.IAsyncResult BeginEliminarDirCatColonias(Suncorp.Models.DirCatColonias model, System.AsyncCallback callback, object asyncState);
        
        bool EndEliminarDirCatColonias(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirDirecciones", ReplyAction="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirDireccionesResponse")]
        System.Collections.Generic.List<Suncorp.Models.DirDirecciones> ObtenerTablaDirDirecciones();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirDirecciones", ReplyAction="http://tempuri.org/IDireccionesWcf/ObtenerTablaDirDireccionesResponse")]
        System.IAsyncResult BeginObtenerTablaDirDirecciones(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Suncorp.Models.DirDirecciones> EndObtenerTablaDirDirecciones(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/InsertarDirDirecciones", ReplyAction="http://tempuri.org/IDireccionesWcf/InsertarDirDireccionesResponse")]
        Suncorp.Models.DirDirecciones InsertarDirDirecciones(Suncorp.Models.DirDirecciones model);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/InsertarDirDirecciones", ReplyAction="http://tempuri.org/IDireccionesWcf/InsertarDirDireccionesResponse")]
        System.IAsyncResult BeginInsertarDirDirecciones(Suncorp.Models.DirDirecciones model, System.AsyncCallback callback, object asyncState);
        
        Suncorp.Models.DirDirecciones EndInsertarDirDirecciones(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/ActualizarDirDirecciones", ReplyAction="http://tempuri.org/IDireccionesWcf/ActualizarDirDireccionesResponse")]
        bool ActualizarDirDirecciones(Suncorp.Models.DirDirecciones model);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/ActualizarDirDirecciones", ReplyAction="http://tempuri.org/IDireccionesWcf/ActualizarDirDireccionesResponse")]
        System.IAsyncResult BeginActualizarDirDirecciones(Suncorp.Models.DirDirecciones model, System.AsyncCallback callback, object asyncState);
        
        bool EndActualizarDirDirecciones(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDireccionesWcf/EliminarDirDirecciones", ReplyAction="http://tempuri.org/IDireccionesWcf/EliminarDirDireccionesResponse")]
        bool EliminarDirDirecciones(Suncorp.Models.DirDirecciones model);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDireccionesWcf/EliminarDirDirecciones", ReplyAction="http://tempuri.org/IDireccionesWcf/EliminarDirDireccionesResponse")]
        System.IAsyncResult BeginEliminarDirDirecciones(Suncorp.Models.DirDirecciones model, System.AsyncCallback callback, object asyncState);
        
        bool EndEliminarDirDirecciones(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDireccionesWcfChannel : Suncorp.ServiceController.DireccionesWcf.IDireccionesWcf, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenerTablaDirCatEstadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenerTablaDirCatEstadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Suncorp.Models.DirCatEstados> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Suncorp.Models.DirCatEstados>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarDirCatEstadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarDirCatEstadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Suncorp.Models.DirCatEstados Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Suncorp.Models.DirCatEstados)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarDirCatEstadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarDirCatEstadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EliminarDirCatEstadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EliminarDirCatEstadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenerTablaDirCatMunicipiosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenerTablaDirCatMunicipiosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Suncorp.Models.DirCatMunicipios> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Suncorp.Models.DirCatMunicipios>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarDirCatMunicipiosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarDirCatMunicipiosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Suncorp.Models.DirCatMunicipios Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Suncorp.Models.DirCatMunicipios)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarDirCatMunicipiosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarDirCatMunicipiosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EliminarDirCatMunicipiosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EliminarDirCatMunicipiosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenerTablaDirCatColoniasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenerTablaDirCatColoniasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Suncorp.Models.DirCatColonias> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Suncorp.Models.DirCatColonias>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarDirCatColoniasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarDirCatColoniasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Suncorp.Models.DirCatColonias Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Suncorp.Models.DirCatColonias)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarDirCatColoniasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarDirCatColoniasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EliminarDirCatColoniasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EliminarDirCatColoniasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObtenerTablaDirDireccionesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ObtenerTablaDirDireccionesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Suncorp.Models.DirDirecciones> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Suncorp.Models.DirDirecciones>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertarDirDireccionesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertarDirDireccionesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Suncorp.Models.DirDirecciones Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Suncorp.Models.DirDirecciones)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActualizarDirDireccionesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActualizarDirDireccionesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EliminarDirDireccionesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EliminarDirDireccionesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DireccionesWcfClient : System.ServiceModel.ClientBase<Suncorp.ServiceController.DireccionesWcf.IDireccionesWcf>, Suncorp.ServiceController.DireccionesWcf.IDireccionesWcf {
        
        private BeginOperationDelegate onBeginObtenerTablaDirCatEstadoDelegate;
        
        private EndOperationDelegate onEndObtenerTablaDirCatEstadoDelegate;
        
        private System.Threading.SendOrPostCallback onObtenerTablaDirCatEstadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarDirCatEstadoDelegate;
        
        private EndOperationDelegate onEndInsertarDirCatEstadoDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarDirCatEstadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarDirCatEstadoDelegate;
        
        private EndOperationDelegate onEndActualizarDirCatEstadoDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarDirCatEstadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginEliminarDirCatEstadoDelegate;
        
        private EndOperationDelegate onEndEliminarDirCatEstadoDelegate;
        
        private System.Threading.SendOrPostCallback onEliminarDirCatEstadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenerTablaDirCatMunicipiosDelegate;
        
        private EndOperationDelegate onEndObtenerTablaDirCatMunicipiosDelegate;
        
        private System.Threading.SendOrPostCallback onObtenerTablaDirCatMunicipiosCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarDirCatMunicipiosDelegate;
        
        private EndOperationDelegate onEndInsertarDirCatMunicipiosDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarDirCatMunicipiosCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarDirCatMunicipiosDelegate;
        
        private EndOperationDelegate onEndActualizarDirCatMunicipiosDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarDirCatMunicipiosCompletedDelegate;
        
        private BeginOperationDelegate onBeginEliminarDirCatMunicipiosDelegate;
        
        private EndOperationDelegate onEndEliminarDirCatMunicipiosDelegate;
        
        private System.Threading.SendOrPostCallback onEliminarDirCatMunicipiosCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenerTablaDirCatColoniasDelegate;
        
        private EndOperationDelegate onEndObtenerTablaDirCatColoniasDelegate;
        
        private System.Threading.SendOrPostCallback onObtenerTablaDirCatColoniasCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarDirCatColoniasDelegate;
        
        private EndOperationDelegate onEndInsertarDirCatColoniasDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarDirCatColoniasCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarDirCatColoniasDelegate;
        
        private EndOperationDelegate onEndActualizarDirCatColoniasDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarDirCatColoniasCompletedDelegate;
        
        private BeginOperationDelegate onBeginEliminarDirCatColoniasDelegate;
        
        private EndOperationDelegate onEndEliminarDirCatColoniasDelegate;
        
        private System.Threading.SendOrPostCallback onEliminarDirCatColoniasCompletedDelegate;
        
        private BeginOperationDelegate onBeginObtenerTablaDirDireccionesDelegate;
        
        private EndOperationDelegate onEndObtenerTablaDirDireccionesDelegate;
        
        private System.Threading.SendOrPostCallback onObtenerTablaDirDireccionesCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertarDirDireccionesDelegate;
        
        private EndOperationDelegate onEndInsertarDirDireccionesDelegate;
        
        private System.Threading.SendOrPostCallback onInsertarDirDireccionesCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarDirDireccionesDelegate;
        
        private EndOperationDelegate onEndActualizarDirDireccionesDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarDirDireccionesCompletedDelegate;
        
        private BeginOperationDelegate onBeginEliminarDirDireccionesDelegate;
        
        private EndOperationDelegate onEndEliminarDirDireccionesDelegate;
        
        private System.Threading.SendOrPostCallback onEliminarDirDireccionesCompletedDelegate;
        
        public DireccionesWcfClient() {
        }
        
        public DireccionesWcfClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DireccionesWcfClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DireccionesWcfClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DireccionesWcfClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<ObtenerTablaDirCatEstadoCompletedEventArgs> ObtenerTablaDirCatEstadoCompleted;
        
        public event System.EventHandler<InsertarDirCatEstadoCompletedEventArgs> InsertarDirCatEstadoCompleted;
        
        public event System.EventHandler<ActualizarDirCatEstadoCompletedEventArgs> ActualizarDirCatEstadoCompleted;
        
        public event System.EventHandler<EliminarDirCatEstadoCompletedEventArgs> EliminarDirCatEstadoCompleted;
        
        public event System.EventHandler<ObtenerTablaDirCatMunicipiosCompletedEventArgs> ObtenerTablaDirCatMunicipiosCompleted;
        
        public event System.EventHandler<InsertarDirCatMunicipiosCompletedEventArgs> InsertarDirCatMunicipiosCompleted;
        
        public event System.EventHandler<ActualizarDirCatMunicipiosCompletedEventArgs> ActualizarDirCatMunicipiosCompleted;
        
        public event System.EventHandler<EliminarDirCatMunicipiosCompletedEventArgs> EliminarDirCatMunicipiosCompleted;
        
        public event System.EventHandler<ObtenerTablaDirCatColoniasCompletedEventArgs> ObtenerTablaDirCatColoniasCompleted;
        
        public event System.EventHandler<InsertarDirCatColoniasCompletedEventArgs> InsertarDirCatColoniasCompleted;
        
        public event System.EventHandler<ActualizarDirCatColoniasCompletedEventArgs> ActualizarDirCatColoniasCompleted;
        
        public event System.EventHandler<EliminarDirCatColoniasCompletedEventArgs> EliminarDirCatColoniasCompleted;
        
        public event System.EventHandler<ObtenerTablaDirDireccionesCompletedEventArgs> ObtenerTablaDirDireccionesCompleted;
        
        public event System.EventHandler<InsertarDirDireccionesCompletedEventArgs> InsertarDirDireccionesCompleted;
        
        public event System.EventHandler<ActualizarDirDireccionesCompletedEventArgs> ActualizarDirDireccionesCompleted;
        
        public event System.EventHandler<EliminarDirDireccionesCompletedEventArgs> EliminarDirDireccionesCompleted;
        
        public System.Collections.Generic.List<Suncorp.Models.DirCatEstados> ObtenerTablaDirCatEstado() {
            return base.Channel.ObtenerTablaDirCatEstado();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginObtenerTablaDirCatEstado(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenerTablaDirCatEstado(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Suncorp.Models.DirCatEstados> EndObtenerTablaDirCatEstado(System.IAsyncResult result) {
            return base.Channel.EndObtenerTablaDirCatEstado(result);
        }
        
        private System.IAsyncResult OnBeginObtenerTablaDirCatEstado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginObtenerTablaDirCatEstado(callback, asyncState);
        }
        
        private object[] OnEndObtenerTablaDirCatEstado(System.IAsyncResult result) {
            System.Collections.Generic.List<Suncorp.Models.DirCatEstados> retVal = this.EndObtenerTablaDirCatEstado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenerTablaDirCatEstadoCompleted(object state) {
            if ((this.ObtenerTablaDirCatEstadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenerTablaDirCatEstadoCompleted(this, new ObtenerTablaDirCatEstadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenerTablaDirCatEstadoAsync() {
            this.ObtenerTablaDirCatEstadoAsync(null);
        }
        
        public void ObtenerTablaDirCatEstadoAsync(object userState) {
            if ((this.onBeginObtenerTablaDirCatEstadoDelegate == null)) {
                this.onBeginObtenerTablaDirCatEstadoDelegate = new BeginOperationDelegate(this.OnBeginObtenerTablaDirCatEstado);
            }
            if ((this.onEndObtenerTablaDirCatEstadoDelegate == null)) {
                this.onEndObtenerTablaDirCatEstadoDelegate = new EndOperationDelegate(this.OnEndObtenerTablaDirCatEstado);
            }
            if ((this.onObtenerTablaDirCatEstadoCompletedDelegate == null)) {
                this.onObtenerTablaDirCatEstadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenerTablaDirCatEstadoCompleted);
            }
            base.InvokeAsync(this.onBeginObtenerTablaDirCatEstadoDelegate, null, this.onEndObtenerTablaDirCatEstadoDelegate, this.onObtenerTablaDirCatEstadoCompletedDelegate, userState);
        }
        
        public Suncorp.Models.DirCatEstados InsertarDirCatEstado(Suncorp.Models.DirCatEstados model) {
            return base.Channel.InsertarDirCatEstado(model);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertarDirCatEstado(Suncorp.Models.DirCatEstados model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarDirCatEstado(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Suncorp.Models.DirCatEstados EndInsertarDirCatEstado(System.IAsyncResult result) {
            return base.Channel.EndInsertarDirCatEstado(result);
        }
        
        private System.IAsyncResult OnBeginInsertarDirCatEstado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Suncorp.Models.DirCatEstados model = ((Suncorp.Models.DirCatEstados)(inValues[0]));
            return this.BeginInsertarDirCatEstado(model, callback, asyncState);
        }
        
        private object[] OnEndInsertarDirCatEstado(System.IAsyncResult result) {
            Suncorp.Models.DirCatEstados retVal = this.EndInsertarDirCatEstado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarDirCatEstadoCompleted(object state) {
            if ((this.InsertarDirCatEstadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarDirCatEstadoCompleted(this, new InsertarDirCatEstadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarDirCatEstadoAsync(Suncorp.Models.DirCatEstados model) {
            this.InsertarDirCatEstadoAsync(model, null);
        }
        
        public void InsertarDirCatEstadoAsync(Suncorp.Models.DirCatEstados model, object userState) {
            if ((this.onBeginInsertarDirCatEstadoDelegate == null)) {
                this.onBeginInsertarDirCatEstadoDelegate = new BeginOperationDelegate(this.OnBeginInsertarDirCatEstado);
            }
            if ((this.onEndInsertarDirCatEstadoDelegate == null)) {
                this.onEndInsertarDirCatEstadoDelegate = new EndOperationDelegate(this.OnEndInsertarDirCatEstado);
            }
            if ((this.onInsertarDirCatEstadoCompletedDelegate == null)) {
                this.onInsertarDirCatEstadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarDirCatEstadoCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarDirCatEstadoDelegate, new object[] {
                        model}, this.onEndInsertarDirCatEstadoDelegate, this.onInsertarDirCatEstadoCompletedDelegate, userState);
        }
        
        public bool ActualizarDirCatEstado(Suncorp.Models.DirCatEstados model) {
            return base.Channel.ActualizarDirCatEstado(model);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginActualizarDirCatEstado(Suncorp.Models.DirCatEstados model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarDirCatEstado(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndActualizarDirCatEstado(System.IAsyncResult result) {
            return base.Channel.EndActualizarDirCatEstado(result);
        }
        
        private System.IAsyncResult OnBeginActualizarDirCatEstado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Suncorp.Models.DirCatEstados model = ((Suncorp.Models.DirCatEstados)(inValues[0]));
            return this.BeginActualizarDirCatEstado(model, callback, asyncState);
        }
        
        private object[] OnEndActualizarDirCatEstado(System.IAsyncResult result) {
            bool retVal = this.EndActualizarDirCatEstado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarDirCatEstadoCompleted(object state) {
            if ((this.ActualizarDirCatEstadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarDirCatEstadoCompleted(this, new ActualizarDirCatEstadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarDirCatEstadoAsync(Suncorp.Models.DirCatEstados model) {
            this.ActualizarDirCatEstadoAsync(model, null);
        }
        
        public void ActualizarDirCatEstadoAsync(Suncorp.Models.DirCatEstados model, object userState) {
            if ((this.onBeginActualizarDirCatEstadoDelegate == null)) {
                this.onBeginActualizarDirCatEstadoDelegate = new BeginOperationDelegate(this.OnBeginActualizarDirCatEstado);
            }
            if ((this.onEndActualizarDirCatEstadoDelegate == null)) {
                this.onEndActualizarDirCatEstadoDelegate = new EndOperationDelegate(this.OnEndActualizarDirCatEstado);
            }
            if ((this.onActualizarDirCatEstadoCompletedDelegate == null)) {
                this.onActualizarDirCatEstadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarDirCatEstadoCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarDirCatEstadoDelegate, new object[] {
                        model}, this.onEndActualizarDirCatEstadoDelegate, this.onActualizarDirCatEstadoCompletedDelegate, userState);
        }
        
        public bool EliminarDirCatEstado(Suncorp.Models.DirCatEstados model) {
            return base.Channel.EliminarDirCatEstado(model);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEliminarDirCatEstado(Suncorp.Models.DirCatEstados model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEliminarDirCatEstado(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEliminarDirCatEstado(System.IAsyncResult result) {
            return base.Channel.EndEliminarDirCatEstado(result);
        }
        
        private System.IAsyncResult OnBeginEliminarDirCatEstado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Suncorp.Models.DirCatEstados model = ((Suncorp.Models.DirCatEstados)(inValues[0]));
            return this.BeginEliminarDirCatEstado(model, callback, asyncState);
        }
        
        private object[] OnEndEliminarDirCatEstado(System.IAsyncResult result) {
            bool retVal = this.EndEliminarDirCatEstado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEliminarDirCatEstadoCompleted(object state) {
            if ((this.EliminarDirCatEstadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EliminarDirCatEstadoCompleted(this, new EliminarDirCatEstadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EliminarDirCatEstadoAsync(Suncorp.Models.DirCatEstados model) {
            this.EliminarDirCatEstadoAsync(model, null);
        }
        
        public void EliminarDirCatEstadoAsync(Suncorp.Models.DirCatEstados model, object userState) {
            if ((this.onBeginEliminarDirCatEstadoDelegate == null)) {
                this.onBeginEliminarDirCatEstadoDelegate = new BeginOperationDelegate(this.OnBeginEliminarDirCatEstado);
            }
            if ((this.onEndEliminarDirCatEstadoDelegate == null)) {
                this.onEndEliminarDirCatEstadoDelegate = new EndOperationDelegate(this.OnEndEliminarDirCatEstado);
            }
            if ((this.onEliminarDirCatEstadoCompletedDelegate == null)) {
                this.onEliminarDirCatEstadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEliminarDirCatEstadoCompleted);
            }
            base.InvokeAsync(this.onBeginEliminarDirCatEstadoDelegate, new object[] {
                        model}, this.onEndEliminarDirCatEstadoDelegate, this.onEliminarDirCatEstadoCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Suncorp.Models.DirCatMunicipios> ObtenerTablaDirCatMunicipios() {
            return base.Channel.ObtenerTablaDirCatMunicipios();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginObtenerTablaDirCatMunicipios(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenerTablaDirCatMunicipios(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Suncorp.Models.DirCatMunicipios> EndObtenerTablaDirCatMunicipios(System.IAsyncResult result) {
            return base.Channel.EndObtenerTablaDirCatMunicipios(result);
        }
        
        private System.IAsyncResult OnBeginObtenerTablaDirCatMunicipios(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginObtenerTablaDirCatMunicipios(callback, asyncState);
        }
        
        private object[] OnEndObtenerTablaDirCatMunicipios(System.IAsyncResult result) {
            System.Collections.Generic.List<Suncorp.Models.DirCatMunicipios> retVal = this.EndObtenerTablaDirCatMunicipios(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenerTablaDirCatMunicipiosCompleted(object state) {
            if ((this.ObtenerTablaDirCatMunicipiosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenerTablaDirCatMunicipiosCompleted(this, new ObtenerTablaDirCatMunicipiosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenerTablaDirCatMunicipiosAsync() {
            this.ObtenerTablaDirCatMunicipiosAsync(null);
        }
        
        public void ObtenerTablaDirCatMunicipiosAsync(object userState) {
            if ((this.onBeginObtenerTablaDirCatMunicipiosDelegate == null)) {
                this.onBeginObtenerTablaDirCatMunicipiosDelegate = new BeginOperationDelegate(this.OnBeginObtenerTablaDirCatMunicipios);
            }
            if ((this.onEndObtenerTablaDirCatMunicipiosDelegate == null)) {
                this.onEndObtenerTablaDirCatMunicipiosDelegate = new EndOperationDelegate(this.OnEndObtenerTablaDirCatMunicipios);
            }
            if ((this.onObtenerTablaDirCatMunicipiosCompletedDelegate == null)) {
                this.onObtenerTablaDirCatMunicipiosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenerTablaDirCatMunicipiosCompleted);
            }
            base.InvokeAsync(this.onBeginObtenerTablaDirCatMunicipiosDelegate, null, this.onEndObtenerTablaDirCatMunicipiosDelegate, this.onObtenerTablaDirCatMunicipiosCompletedDelegate, userState);
        }
        
        public Suncorp.Models.DirCatMunicipios InsertarDirCatMunicipios(Suncorp.Models.DirCatMunicipios model) {
            return base.Channel.InsertarDirCatMunicipios(model);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertarDirCatMunicipios(Suncorp.Models.DirCatMunicipios model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarDirCatMunicipios(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Suncorp.Models.DirCatMunicipios EndInsertarDirCatMunicipios(System.IAsyncResult result) {
            return base.Channel.EndInsertarDirCatMunicipios(result);
        }
        
        private System.IAsyncResult OnBeginInsertarDirCatMunicipios(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Suncorp.Models.DirCatMunicipios model = ((Suncorp.Models.DirCatMunicipios)(inValues[0]));
            return this.BeginInsertarDirCatMunicipios(model, callback, asyncState);
        }
        
        private object[] OnEndInsertarDirCatMunicipios(System.IAsyncResult result) {
            Suncorp.Models.DirCatMunicipios retVal = this.EndInsertarDirCatMunicipios(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarDirCatMunicipiosCompleted(object state) {
            if ((this.InsertarDirCatMunicipiosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarDirCatMunicipiosCompleted(this, new InsertarDirCatMunicipiosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarDirCatMunicipiosAsync(Suncorp.Models.DirCatMunicipios model) {
            this.InsertarDirCatMunicipiosAsync(model, null);
        }
        
        public void InsertarDirCatMunicipiosAsync(Suncorp.Models.DirCatMunicipios model, object userState) {
            if ((this.onBeginInsertarDirCatMunicipiosDelegate == null)) {
                this.onBeginInsertarDirCatMunicipiosDelegate = new BeginOperationDelegate(this.OnBeginInsertarDirCatMunicipios);
            }
            if ((this.onEndInsertarDirCatMunicipiosDelegate == null)) {
                this.onEndInsertarDirCatMunicipiosDelegate = new EndOperationDelegate(this.OnEndInsertarDirCatMunicipios);
            }
            if ((this.onInsertarDirCatMunicipiosCompletedDelegate == null)) {
                this.onInsertarDirCatMunicipiosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarDirCatMunicipiosCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarDirCatMunicipiosDelegate, new object[] {
                        model}, this.onEndInsertarDirCatMunicipiosDelegate, this.onInsertarDirCatMunicipiosCompletedDelegate, userState);
        }
        
        public bool ActualizarDirCatMunicipios(Suncorp.Models.DirCatMunicipios model) {
            return base.Channel.ActualizarDirCatMunicipios(model);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginActualizarDirCatMunicipios(Suncorp.Models.DirCatMunicipios model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarDirCatMunicipios(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndActualizarDirCatMunicipios(System.IAsyncResult result) {
            return base.Channel.EndActualizarDirCatMunicipios(result);
        }
        
        private System.IAsyncResult OnBeginActualizarDirCatMunicipios(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Suncorp.Models.DirCatMunicipios model = ((Suncorp.Models.DirCatMunicipios)(inValues[0]));
            return this.BeginActualizarDirCatMunicipios(model, callback, asyncState);
        }
        
        private object[] OnEndActualizarDirCatMunicipios(System.IAsyncResult result) {
            bool retVal = this.EndActualizarDirCatMunicipios(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarDirCatMunicipiosCompleted(object state) {
            if ((this.ActualizarDirCatMunicipiosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarDirCatMunicipiosCompleted(this, new ActualizarDirCatMunicipiosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarDirCatMunicipiosAsync(Suncorp.Models.DirCatMunicipios model) {
            this.ActualizarDirCatMunicipiosAsync(model, null);
        }
        
        public void ActualizarDirCatMunicipiosAsync(Suncorp.Models.DirCatMunicipios model, object userState) {
            if ((this.onBeginActualizarDirCatMunicipiosDelegate == null)) {
                this.onBeginActualizarDirCatMunicipiosDelegate = new BeginOperationDelegate(this.OnBeginActualizarDirCatMunicipios);
            }
            if ((this.onEndActualizarDirCatMunicipiosDelegate == null)) {
                this.onEndActualizarDirCatMunicipiosDelegate = new EndOperationDelegate(this.OnEndActualizarDirCatMunicipios);
            }
            if ((this.onActualizarDirCatMunicipiosCompletedDelegate == null)) {
                this.onActualizarDirCatMunicipiosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarDirCatMunicipiosCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarDirCatMunicipiosDelegate, new object[] {
                        model}, this.onEndActualizarDirCatMunicipiosDelegate, this.onActualizarDirCatMunicipiosCompletedDelegate, userState);
        }
        
        public bool EliminarDirCatMunicipios(Suncorp.Models.DirCatMunicipios model) {
            return base.Channel.EliminarDirCatMunicipios(model);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEliminarDirCatMunicipios(Suncorp.Models.DirCatMunicipios model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEliminarDirCatMunicipios(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEliminarDirCatMunicipios(System.IAsyncResult result) {
            return base.Channel.EndEliminarDirCatMunicipios(result);
        }
        
        private System.IAsyncResult OnBeginEliminarDirCatMunicipios(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Suncorp.Models.DirCatMunicipios model = ((Suncorp.Models.DirCatMunicipios)(inValues[0]));
            return this.BeginEliminarDirCatMunicipios(model, callback, asyncState);
        }
        
        private object[] OnEndEliminarDirCatMunicipios(System.IAsyncResult result) {
            bool retVal = this.EndEliminarDirCatMunicipios(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEliminarDirCatMunicipiosCompleted(object state) {
            if ((this.EliminarDirCatMunicipiosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EliminarDirCatMunicipiosCompleted(this, new EliminarDirCatMunicipiosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EliminarDirCatMunicipiosAsync(Suncorp.Models.DirCatMunicipios model) {
            this.EliminarDirCatMunicipiosAsync(model, null);
        }
        
        public void EliminarDirCatMunicipiosAsync(Suncorp.Models.DirCatMunicipios model, object userState) {
            if ((this.onBeginEliminarDirCatMunicipiosDelegate == null)) {
                this.onBeginEliminarDirCatMunicipiosDelegate = new BeginOperationDelegate(this.OnBeginEliminarDirCatMunicipios);
            }
            if ((this.onEndEliminarDirCatMunicipiosDelegate == null)) {
                this.onEndEliminarDirCatMunicipiosDelegate = new EndOperationDelegate(this.OnEndEliminarDirCatMunicipios);
            }
            if ((this.onEliminarDirCatMunicipiosCompletedDelegate == null)) {
                this.onEliminarDirCatMunicipiosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEliminarDirCatMunicipiosCompleted);
            }
            base.InvokeAsync(this.onBeginEliminarDirCatMunicipiosDelegate, new object[] {
                        model}, this.onEndEliminarDirCatMunicipiosDelegate, this.onEliminarDirCatMunicipiosCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Suncorp.Models.DirCatColonias> ObtenerTablaDirCatColonias() {
            return base.Channel.ObtenerTablaDirCatColonias();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginObtenerTablaDirCatColonias(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenerTablaDirCatColonias(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Suncorp.Models.DirCatColonias> EndObtenerTablaDirCatColonias(System.IAsyncResult result) {
            return base.Channel.EndObtenerTablaDirCatColonias(result);
        }
        
        private System.IAsyncResult OnBeginObtenerTablaDirCatColonias(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginObtenerTablaDirCatColonias(callback, asyncState);
        }
        
        private object[] OnEndObtenerTablaDirCatColonias(System.IAsyncResult result) {
            System.Collections.Generic.List<Suncorp.Models.DirCatColonias> retVal = this.EndObtenerTablaDirCatColonias(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenerTablaDirCatColoniasCompleted(object state) {
            if ((this.ObtenerTablaDirCatColoniasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenerTablaDirCatColoniasCompleted(this, new ObtenerTablaDirCatColoniasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenerTablaDirCatColoniasAsync() {
            this.ObtenerTablaDirCatColoniasAsync(null);
        }
        
        public void ObtenerTablaDirCatColoniasAsync(object userState) {
            if ((this.onBeginObtenerTablaDirCatColoniasDelegate == null)) {
                this.onBeginObtenerTablaDirCatColoniasDelegate = new BeginOperationDelegate(this.OnBeginObtenerTablaDirCatColonias);
            }
            if ((this.onEndObtenerTablaDirCatColoniasDelegate == null)) {
                this.onEndObtenerTablaDirCatColoniasDelegate = new EndOperationDelegate(this.OnEndObtenerTablaDirCatColonias);
            }
            if ((this.onObtenerTablaDirCatColoniasCompletedDelegate == null)) {
                this.onObtenerTablaDirCatColoniasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenerTablaDirCatColoniasCompleted);
            }
            base.InvokeAsync(this.onBeginObtenerTablaDirCatColoniasDelegate, null, this.onEndObtenerTablaDirCatColoniasDelegate, this.onObtenerTablaDirCatColoniasCompletedDelegate, userState);
        }
        
        public Suncorp.Models.DirCatColonias InsertarDirCatColonias(Suncorp.Models.DirCatColonias model) {
            return base.Channel.InsertarDirCatColonias(model);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertarDirCatColonias(Suncorp.Models.DirCatColonias model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarDirCatColonias(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Suncorp.Models.DirCatColonias EndInsertarDirCatColonias(System.IAsyncResult result) {
            return base.Channel.EndInsertarDirCatColonias(result);
        }
        
        private System.IAsyncResult OnBeginInsertarDirCatColonias(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Suncorp.Models.DirCatColonias model = ((Suncorp.Models.DirCatColonias)(inValues[0]));
            return this.BeginInsertarDirCatColonias(model, callback, asyncState);
        }
        
        private object[] OnEndInsertarDirCatColonias(System.IAsyncResult result) {
            Suncorp.Models.DirCatColonias retVal = this.EndInsertarDirCatColonias(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarDirCatColoniasCompleted(object state) {
            if ((this.InsertarDirCatColoniasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarDirCatColoniasCompleted(this, new InsertarDirCatColoniasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarDirCatColoniasAsync(Suncorp.Models.DirCatColonias model) {
            this.InsertarDirCatColoniasAsync(model, null);
        }
        
        public void InsertarDirCatColoniasAsync(Suncorp.Models.DirCatColonias model, object userState) {
            if ((this.onBeginInsertarDirCatColoniasDelegate == null)) {
                this.onBeginInsertarDirCatColoniasDelegate = new BeginOperationDelegate(this.OnBeginInsertarDirCatColonias);
            }
            if ((this.onEndInsertarDirCatColoniasDelegate == null)) {
                this.onEndInsertarDirCatColoniasDelegate = new EndOperationDelegate(this.OnEndInsertarDirCatColonias);
            }
            if ((this.onInsertarDirCatColoniasCompletedDelegate == null)) {
                this.onInsertarDirCatColoniasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarDirCatColoniasCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarDirCatColoniasDelegate, new object[] {
                        model}, this.onEndInsertarDirCatColoniasDelegate, this.onInsertarDirCatColoniasCompletedDelegate, userState);
        }
        
        public bool ActualizarDirCatColonias(Suncorp.Models.DirCatColonias model) {
            return base.Channel.ActualizarDirCatColonias(model);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginActualizarDirCatColonias(Suncorp.Models.DirCatColonias model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarDirCatColonias(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndActualizarDirCatColonias(System.IAsyncResult result) {
            return base.Channel.EndActualizarDirCatColonias(result);
        }
        
        private System.IAsyncResult OnBeginActualizarDirCatColonias(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Suncorp.Models.DirCatColonias model = ((Suncorp.Models.DirCatColonias)(inValues[0]));
            return this.BeginActualizarDirCatColonias(model, callback, asyncState);
        }
        
        private object[] OnEndActualizarDirCatColonias(System.IAsyncResult result) {
            bool retVal = this.EndActualizarDirCatColonias(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarDirCatColoniasCompleted(object state) {
            if ((this.ActualizarDirCatColoniasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarDirCatColoniasCompleted(this, new ActualizarDirCatColoniasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarDirCatColoniasAsync(Suncorp.Models.DirCatColonias model) {
            this.ActualizarDirCatColoniasAsync(model, null);
        }
        
        public void ActualizarDirCatColoniasAsync(Suncorp.Models.DirCatColonias model, object userState) {
            if ((this.onBeginActualizarDirCatColoniasDelegate == null)) {
                this.onBeginActualizarDirCatColoniasDelegate = new BeginOperationDelegate(this.OnBeginActualizarDirCatColonias);
            }
            if ((this.onEndActualizarDirCatColoniasDelegate == null)) {
                this.onEndActualizarDirCatColoniasDelegate = new EndOperationDelegate(this.OnEndActualizarDirCatColonias);
            }
            if ((this.onActualizarDirCatColoniasCompletedDelegate == null)) {
                this.onActualizarDirCatColoniasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarDirCatColoniasCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarDirCatColoniasDelegate, new object[] {
                        model}, this.onEndActualizarDirCatColoniasDelegate, this.onActualizarDirCatColoniasCompletedDelegate, userState);
        }
        
        public bool EliminarDirCatColonias(Suncorp.Models.DirCatColonias model) {
            return base.Channel.EliminarDirCatColonias(model);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEliminarDirCatColonias(Suncorp.Models.DirCatColonias model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEliminarDirCatColonias(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEliminarDirCatColonias(System.IAsyncResult result) {
            return base.Channel.EndEliminarDirCatColonias(result);
        }
        
        private System.IAsyncResult OnBeginEliminarDirCatColonias(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Suncorp.Models.DirCatColonias model = ((Suncorp.Models.DirCatColonias)(inValues[0]));
            return this.BeginEliminarDirCatColonias(model, callback, asyncState);
        }
        
        private object[] OnEndEliminarDirCatColonias(System.IAsyncResult result) {
            bool retVal = this.EndEliminarDirCatColonias(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEliminarDirCatColoniasCompleted(object state) {
            if ((this.EliminarDirCatColoniasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EliminarDirCatColoniasCompleted(this, new EliminarDirCatColoniasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EliminarDirCatColoniasAsync(Suncorp.Models.DirCatColonias model) {
            this.EliminarDirCatColoniasAsync(model, null);
        }
        
        public void EliminarDirCatColoniasAsync(Suncorp.Models.DirCatColonias model, object userState) {
            if ((this.onBeginEliminarDirCatColoniasDelegate == null)) {
                this.onBeginEliminarDirCatColoniasDelegate = new BeginOperationDelegate(this.OnBeginEliminarDirCatColonias);
            }
            if ((this.onEndEliminarDirCatColoniasDelegate == null)) {
                this.onEndEliminarDirCatColoniasDelegate = new EndOperationDelegate(this.OnEndEliminarDirCatColonias);
            }
            if ((this.onEliminarDirCatColoniasCompletedDelegate == null)) {
                this.onEliminarDirCatColoniasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEliminarDirCatColoniasCompleted);
            }
            base.InvokeAsync(this.onBeginEliminarDirCatColoniasDelegate, new object[] {
                        model}, this.onEndEliminarDirCatColoniasDelegate, this.onEliminarDirCatColoniasCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Suncorp.Models.DirDirecciones> ObtenerTablaDirDirecciones() {
            return base.Channel.ObtenerTablaDirDirecciones();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginObtenerTablaDirDirecciones(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginObtenerTablaDirDirecciones(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Suncorp.Models.DirDirecciones> EndObtenerTablaDirDirecciones(System.IAsyncResult result) {
            return base.Channel.EndObtenerTablaDirDirecciones(result);
        }
        
        private System.IAsyncResult OnBeginObtenerTablaDirDirecciones(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginObtenerTablaDirDirecciones(callback, asyncState);
        }
        
        private object[] OnEndObtenerTablaDirDirecciones(System.IAsyncResult result) {
            System.Collections.Generic.List<Suncorp.Models.DirDirecciones> retVal = this.EndObtenerTablaDirDirecciones(result);
            return new object[] {
                    retVal};
        }
        
        private void OnObtenerTablaDirDireccionesCompleted(object state) {
            if ((this.ObtenerTablaDirDireccionesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ObtenerTablaDirDireccionesCompleted(this, new ObtenerTablaDirDireccionesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ObtenerTablaDirDireccionesAsync() {
            this.ObtenerTablaDirDireccionesAsync(null);
        }
        
        public void ObtenerTablaDirDireccionesAsync(object userState) {
            if ((this.onBeginObtenerTablaDirDireccionesDelegate == null)) {
                this.onBeginObtenerTablaDirDireccionesDelegate = new BeginOperationDelegate(this.OnBeginObtenerTablaDirDirecciones);
            }
            if ((this.onEndObtenerTablaDirDireccionesDelegate == null)) {
                this.onEndObtenerTablaDirDireccionesDelegate = new EndOperationDelegate(this.OnEndObtenerTablaDirDirecciones);
            }
            if ((this.onObtenerTablaDirDireccionesCompletedDelegate == null)) {
                this.onObtenerTablaDirDireccionesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnObtenerTablaDirDireccionesCompleted);
            }
            base.InvokeAsync(this.onBeginObtenerTablaDirDireccionesDelegate, null, this.onEndObtenerTablaDirDireccionesDelegate, this.onObtenerTablaDirDireccionesCompletedDelegate, userState);
        }
        
        public Suncorp.Models.DirDirecciones InsertarDirDirecciones(Suncorp.Models.DirDirecciones model) {
            return base.Channel.InsertarDirDirecciones(model);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertarDirDirecciones(Suncorp.Models.DirDirecciones model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertarDirDirecciones(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Suncorp.Models.DirDirecciones EndInsertarDirDirecciones(System.IAsyncResult result) {
            return base.Channel.EndInsertarDirDirecciones(result);
        }
        
        private System.IAsyncResult OnBeginInsertarDirDirecciones(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Suncorp.Models.DirDirecciones model = ((Suncorp.Models.DirDirecciones)(inValues[0]));
            return this.BeginInsertarDirDirecciones(model, callback, asyncState);
        }
        
        private object[] OnEndInsertarDirDirecciones(System.IAsyncResult result) {
            Suncorp.Models.DirDirecciones retVal = this.EndInsertarDirDirecciones(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertarDirDireccionesCompleted(object state) {
            if ((this.InsertarDirDireccionesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertarDirDireccionesCompleted(this, new InsertarDirDireccionesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertarDirDireccionesAsync(Suncorp.Models.DirDirecciones model) {
            this.InsertarDirDireccionesAsync(model, null);
        }
        
        public void InsertarDirDireccionesAsync(Suncorp.Models.DirDirecciones model, object userState) {
            if ((this.onBeginInsertarDirDireccionesDelegate == null)) {
                this.onBeginInsertarDirDireccionesDelegate = new BeginOperationDelegate(this.OnBeginInsertarDirDirecciones);
            }
            if ((this.onEndInsertarDirDireccionesDelegate == null)) {
                this.onEndInsertarDirDireccionesDelegate = new EndOperationDelegate(this.OnEndInsertarDirDirecciones);
            }
            if ((this.onInsertarDirDireccionesCompletedDelegate == null)) {
                this.onInsertarDirDireccionesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertarDirDireccionesCompleted);
            }
            base.InvokeAsync(this.onBeginInsertarDirDireccionesDelegate, new object[] {
                        model}, this.onEndInsertarDirDireccionesDelegate, this.onInsertarDirDireccionesCompletedDelegate, userState);
        }
        
        public bool ActualizarDirDirecciones(Suncorp.Models.DirDirecciones model) {
            return base.Channel.ActualizarDirDirecciones(model);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginActualizarDirDirecciones(Suncorp.Models.DirDirecciones model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarDirDirecciones(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndActualizarDirDirecciones(System.IAsyncResult result) {
            return base.Channel.EndActualizarDirDirecciones(result);
        }
        
        private System.IAsyncResult OnBeginActualizarDirDirecciones(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Suncorp.Models.DirDirecciones model = ((Suncorp.Models.DirDirecciones)(inValues[0]));
            return this.BeginActualizarDirDirecciones(model, callback, asyncState);
        }
        
        private object[] OnEndActualizarDirDirecciones(System.IAsyncResult result) {
            bool retVal = this.EndActualizarDirDirecciones(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActualizarDirDireccionesCompleted(object state) {
            if ((this.ActualizarDirDireccionesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarDirDireccionesCompleted(this, new ActualizarDirDireccionesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarDirDireccionesAsync(Suncorp.Models.DirDirecciones model) {
            this.ActualizarDirDireccionesAsync(model, null);
        }
        
        public void ActualizarDirDireccionesAsync(Suncorp.Models.DirDirecciones model, object userState) {
            if ((this.onBeginActualizarDirDireccionesDelegate == null)) {
                this.onBeginActualizarDirDireccionesDelegate = new BeginOperationDelegate(this.OnBeginActualizarDirDirecciones);
            }
            if ((this.onEndActualizarDirDireccionesDelegate == null)) {
                this.onEndActualizarDirDireccionesDelegate = new EndOperationDelegate(this.OnEndActualizarDirDirecciones);
            }
            if ((this.onActualizarDirDireccionesCompletedDelegate == null)) {
                this.onActualizarDirDireccionesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarDirDireccionesCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarDirDireccionesDelegate, new object[] {
                        model}, this.onEndActualizarDirDireccionesDelegate, this.onActualizarDirDireccionesCompletedDelegate, userState);
        }
        
        public bool EliminarDirDirecciones(Suncorp.Models.DirDirecciones model) {
            return base.Channel.EliminarDirDirecciones(model);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEliminarDirDirecciones(Suncorp.Models.DirDirecciones model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEliminarDirDirecciones(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEliminarDirDirecciones(System.IAsyncResult result) {
            return base.Channel.EndEliminarDirDirecciones(result);
        }
        
        private System.IAsyncResult OnBeginEliminarDirDirecciones(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Suncorp.Models.DirDirecciones model = ((Suncorp.Models.DirDirecciones)(inValues[0]));
            return this.BeginEliminarDirDirecciones(model, callback, asyncState);
        }
        
        private object[] OnEndEliminarDirDirecciones(System.IAsyncResult result) {
            bool retVal = this.EndEliminarDirDirecciones(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEliminarDirDireccionesCompleted(object state) {
            if ((this.EliminarDirDireccionesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EliminarDirDireccionesCompleted(this, new EliminarDirDireccionesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EliminarDirDireccionesAsync(Suncorp.Models.DirDirecciones model) {
            this.EliminarDirDireccionesAsync(model, null);
        }
        
        public void EliminarDirDireccionesAsync(Suncorp.Models.DirDirecciones model, object userState) {
            if ((this.onBeginEliminarDirDireccionesDelegate == null)) {
                this.onBeginEliminarDirDireccionesDelegate = new BeginOperationDelegate(this.OnBeginEliminarDirDirecciones);
            }
            if ((this.onEndEliminarDirDireccionesDelegate == null)) {
                this.onEndEliminarDirDireccionesDelegate = new EndOperationDelegate(this.OnEndEliminarDirDirecciones);
            }
            if ((this.onEliminarDirDireccionesCompletedDelegate == null)) {
                this.onEliminarDirDireccionesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEliminarDirDireccionesCompleted);
            }
            base.InvokeAsync(this.onBeginEliminarDirDireccionesDelegate, new object[] {
                        model}, this.onEndEliminarDirDireccionesDelegate, this.onEliminarDirDireccionesCompletedDelegate, userState);
        }
    }
}
