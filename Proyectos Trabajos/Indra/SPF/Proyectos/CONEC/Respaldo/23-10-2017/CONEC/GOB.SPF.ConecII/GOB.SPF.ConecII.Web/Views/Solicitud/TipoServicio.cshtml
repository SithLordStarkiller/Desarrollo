@model GOB.SPF.ConecII.Web.Models.UiInstalacion
@{
    var listaInstalacion = (IEnumerable<SelectListItem>)ViewBag.ListaInstalacion;
    var listaZonas = (IEnumerable<SelectListItem>)ViewBag.ListaZonas;
    var listaEstacion = (IEnumerable<SelectListItem>)ViewBag.ListaEstacion;

    var esVer = Model.Action.Equals(GOB.SPF.ConecII.Web.Models.UiEnumEntity.View);
}

@using (Html.BeginForm("TipoServicio", "Solicitud", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "tipoServicioForm" }))
{
    @Html.HiddenFor(x=>x.IdCliente)

    @Html.AntiForgeryToken()
    <div class="top-buffer">
        <h3>@ViewBag.Tittle</h3>
        <hr class="re" />
        <div class="row">
            <p class="pull-left">*Campos obligatorios</p>
        </div>
        <fieldset class="magenTope">
            <legend>Cliente</legend>
            @if (true)
            /*{
                <div class="">
                    <div class="col-lg-12" style="margin-top: 15px;">
                        <div class="col-lg-4">
                            <label>Razon social*:</label>
                            <div class="">
                                @Html.TextBoxFor(model => model.RazonSocial, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <label>Nombre corto del cliente*:</label>
                            <div class="">
                                @Html.TextBoxFor(model => model.NombreCorto, new { @class = "form-control", ViewBag.Editable })
                                @Html.ValidationMessageFor(model => model.NombreCorto, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <label>Correo electronico*:</label>
                            <div class="">
                                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", ViewBag.Editable })
                                @Html.ValidationMessageFor(model => model.NombreCorto, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            }
            else*/
            {
                <div class="">
                    <div class="col-lg-12" style="margin-top: 15px;">
                        <div class="col-lg-4">
                            <label>Razon social*:</label>
                            <div class="">
                                @Html.TextBoxFor(model => model.RazonSocial, new { @class = "form-control", disabled = "disable" })
                                @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <label>Nombre corto del cliente*:</label>
                            <div class="">
                                @Html.TextBoxFor(model => model.NombreCorto, new { @class = "form-control", disabled = "disable" })
                                @Html.ValidationMessageFor(model => model.NombreCorto, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <label>Correo electronico*:</label>
                            <div class="">
                                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", disabled = "disable" })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            }
        </fieldset>
        <br />
        <fieldset class="magenTope">
            <legend>Datos Instalación</legend>
            <div id="divDatosInstalacion">
                <div class="col-lg-12" style="margin-top: 15px;">
                    <div class=""></div>
                    <div class="col-lg-4">
                        <label>Zona*:</label>
                        <div class="">
                            @Html.DropDownListFor(model => model.IdZona, listaZonas, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdZona, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <Label>Estación*:</Label>
                        <div class="">
                            @Html.DropDownListFor(model => model.IdEstacion, listaEstacion, new { @class = "form-control", ViewBag.Editable })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label>Nombre Instalación*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-12" style="margin-top: 15px;">
                    <div class="col-lg-4">
                        <label>Tipo Instalación*:</label>
                        <div class="">
                            @Html.DropDownListFor(model => model.TipoInstalacion.Identificador, listaInstalacion, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label>Telefono*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.TelefonosInstalacion, new { @class = "form-control", ViewBag.Editable })
                            @Html.ValidationMessageFor(model => model.TelefonosInstalacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label>Correo electronico*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.CorreoElectronico, new { @class = "form-control", ViewBag.Editable })
                            @Html.ValidationMessageFor(model => model.CorreoElectronico, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-12" style="margin-top: 15px;">
                    <div class="col-lg-4">
                        <label class="">Fecha inicial*:</label>
                        <div class="datepicker-group">
                            @Html.TextBoxFor(model => model.FechaInicio, new { @class = "form-control datepicker" })
                            <span class="glyphicon glyphicon-calendar" aria-hidden="true"></span>
                            @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger " })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label>Fecha Final*:</label>
                        <div class="datepicker-group">
                            @Html.TextBoxFor(model => model.FechaFin, new { @class = "form-control datepicker" })
                            <span class="glyphicon glyphicon-calendar" aria-hidden="true"></span>
                            @Html.ValidationMessageFor(model => model.FechaFin, "", new { @class = "text-danger " })
                        </div>
                    </div>
                    <div class="col-lg-4">
                       
                    </div>
                </div>
            </div>
        </fieldset>
        <br />
        <fieldset class="magenTope">
            <legend>Domicilio de la Instalación</legend>
            <div id="divDomicilio">
                <div class="col-lg-12" style="margin-top: 15px;">
                    <div class="col-lg-4">
                        <label>Calle*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.Calle, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Calle, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label>Número interior*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.NumInterior, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NumInterior, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label>Número exterior*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.NumExterior, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NumExterior, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-12" style="margin-top: 15px;">
                    <div class="col-lg-4">
                        <label>Código postal*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.CodigoPostal, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CodigoPostal, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label>Entidad federativa*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.Estado, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label>Municipio/Delegación*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.Municipio, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Municipio, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-12" style="margin-top: 15px;">
                    <div class="col-lg-4">
                        <label>Colonia*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.IdColonia, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CodigoPostal, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label>Colindancia*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.Colindancia, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Colindancia, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label>Referencia*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.Referencia, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Referencia, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-12" style="margin-top: 15px;">
                    <div class="">
                        <div class="col-md-12 vertical-align" id="googleMap">
                            <label>Ubicacion</label>
                            <div id="floating-panel">
                                <input id="txbDireccion" type="text" value="">
                                <input id="btnGeo" type="button" onclick="maps()" value="Geocode">
                            </div>
                            <div id="mapa" style="height: 30em; width: 45em;"></div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="col-lg-4">
                        <label>Latitud*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.Referencia, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Referencia, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label>Longitud*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.Referencia, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Referencia, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
        <br />
        <fieldset class="magenTope">
            <legend>Factores</legend>
            <div id="divFactores">
                <div class="col-lg-12" style="margin-top: 15px;">
                    <div class="col-lg-4">
                        <label>Distancia*:</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.Colindancia, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Colindancia, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(m => m.IdDivision)
                        @Html.DropDownListFor(m => m.IdDivision, ViewBag.Divisiones != null ? (IEnumerable<SelectListItem>)ViewBag.Divisiones : new List<SelectListItem>(),
                        "Seleccione", new { @class = "form-control" })
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(m => m.IdGrupo)
                        @Html.DropDownListFor(m => m.IdGrupo, ViewBag.Grupos != null ? (IEnumerable<SelectListItem>)ViewBag.Grupos : new List<SelectListItem>(),
                        "Seleccione", new { @class = "form-control" })
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(m => m.IdFraccion)
                        @Html.DropDownListFor(m => m.IdFraccion, ViewBag.Fracciones != null ? (IEnumerable<SelectListItem>)ViewBag.Fracciones : new List<SelectListItem>(),
                        "Seleccione", new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </fieldset>
        <br />
        <div class="pull-right">
            <button type="button" class="btn btn-default" id="btnBack">
                <span class="glyphicon glyphicon-backward"></span>Cancelar
            </button>
            <button type="button" class="btn btn-default" id="btnSave" @ViewBag.Visible>
                <span class="glyphicon glyphicon-save"></span>Guardar
            </button>
        </div>
        <br />
        <br />
        <br />
    </div>
}
<script>
    function initMap() {
        var a = document.getElementById('mapa');

        if (a != undefined) {

            var div = document.getElementById('mapa');
            var map = new google.maps.Map(div, {
                zoom: 8,
                center: { lat: -34.397, lng: 150.644 }
            });

            var geocoder = new google.maps.Geocoder();

            document.getElementById('btnGeo').addEventListener('click', function () {
                geocodeAddress(geocoder, map);
            });
        }
    };

    function geocodeAddress(geocoder, resultsMap) {
        var address = $("#txbDireccion").val();
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status === 'OK') {
                resultsMap.setCenter(results[0].geometry.location);
                var marker = new google.maps.Marker({
                    map: resultsMap,
                    position: results[0].geometry.location
                });
                resultsMap.show();
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }

    $(document).ready(function () {
        $(".datepicker").datepicker();
        $("#calendar").datepicker();
    });
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA9u3HUcvaBZAw2HIsvKwOFOzBdO0bFb88&callback=initMap"></script>