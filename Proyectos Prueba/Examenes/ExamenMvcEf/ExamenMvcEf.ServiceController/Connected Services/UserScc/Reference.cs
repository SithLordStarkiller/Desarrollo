//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExamenMvcEf.ServiceController.UserScc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserScc.IUsersSll")]
    public interface IUsersSll {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersSll/GetAllUsers", ReplyAction="http://tempuri.org/IUsersSll/GetAllUsersResponse")]
        System.Collections.Generic.List<ExamenMvcEf.Models.Users> GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersSll/GetAllUsers", ReplyAction="http://tempuri.org/IUsersSll/GetAllUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ExamenMvcEf.Models.Users>> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersSll/GetUsersById", ReplyAction="http://tempuri.org/IUsersSll/GetUsersByIdResponse")]
        ExamenMvcEf.Models.Users GetUsersById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersSll/GetUsersById", ReplyAction="http://tempuri.org/IUsersSll/GetUsersByIdResponse")]
        System.Threading.Tasks.Task<ExamenMvcEf.Models.Users> GetUsersByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersSll/AddUser", ReplyAction="http://tempuri.org/IUsersSll/AddUserResponse")]
        ExamenMvcEf.Models.Users AddUser(ExamenMvcEf.Models.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersSll/AddUser", ReplyAction="http://tempuri.org/IUsersSll/AddUserResponse")]
        System.Threading.Tasks.Task<ExamenMvcEf.Models.Users> AddUserAsync(ExamenMvcEf.Models.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersSll/GetCountUsers", ReplyAction="http://tempuri.org/IUsersSll/GetCountUsersResponse")]
        int GetCountUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersSll/GetCountUsers", ReplyAction="http://tempuri.org/IUsersSll/GetCountUsersResponse")]
        System.Threading.Tasks.Task<int> GetCountUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersSll/UpdateUser", ReplyAction="http://tempuri.org/IUsersSll/UpdateUserResponse")]
        ExamenMvcEf.Models.Users UpdateUser(ExamenMvcEf.Models.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersSll/UpdateUser", ReplyAction="http://tempuri.org/IUsersSll/UpdateUserResponse")]
        System.Threading.Tasks.Task<ExamenMvcEf.Models.Users> UpdateUserAsync(ExamenMvcEf.Models.Users user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsersSllChannel : ExamenMvcEf.ServiceController.UserScc.IUsersSll, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsersSllClient : System.ServiceModel.ClientBase<ExamenMvcEf.ServiceController.UserScc.IUsersSll>, ExamenMvcEf.ServiceController.UserScc.IUsersSll {
        
        public UsersSllClient() {
        }
        
        public UsersSllClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsersSllClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersSllClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersSllClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<ExamenMvcEf.Models.Users> GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ExamenMvcEf.Models.Users>> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public ExamenMvcEf.Models.Users GetUsersById(int id) {
            return base.Channel.GetUsersById(id);
        }
        
        public System.Threading.Tasks.Task<ExamenMvcEf.Models.Users> GetUsersByIdAsync(int id) {
            return base.Channel.GetUsersByIdAsync(id);
        }
        
        public ExamenMvcEf.Models.Users AddUser(ExamenMvcEf.Models.Users user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<ExamenMvcEf.Models.Users> AddUserAsync(ExamenMvcEf.Models.Users user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public int GetCountUsers() {
            return base.Channel.GetCountUsers();
        }
        
        public System.Threading.Tasks.Task<int> GetCountUsersAsync() {
            return base.Channel.GetCountUsersAsync();
        }
        
        public ExamenMvcEf.Models.Users UpdateUser(ExamenMvcEf.Models.Users user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<ExamenMvcEf.Models.Users> UpdateUserAsync(ExamenMvcEf.Models.Users user) {
            return base.Channel.UpdateUserAsync(user);
        }
    }
}
